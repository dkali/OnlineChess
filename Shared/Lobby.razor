@using OnlineChess.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage BrowserStorage
@inject PlayerDataService playerDataService
@inject LobbyService lobbyService
@inject SQLiteDataService sqliteDb
@inject NotifierService Notifier

<h1>Hello, @PlayerName!</h1>
@if (!string.IsNullOrEmpty(PlayerName))
{
    <div>
        <button @onclick="Logout">Logout</button>
    </div>
}

Active Players:

<table class="table">
    <thead>
        <tr>
            <th>Player name</th>
            <th>State</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var accountId in PlayerList)
        {
            <tr>
                <td>@sqliteDb.GetPlayerName(accountId)</td>
                <td>
                    @if (lobbyService.PlayerInGameSession(accountId))
                    {
                        @switch (lobbyService.GetSessionState(accountId))
                        {
                            case SessionState.Preparation:
                                <div>Ready to start</div>
                                break;

                            case SessionState.InGame:
                                <div>In Game</div>
                                break;
                        }
                    }
                    else
                    {
                        <div>Online</div>
                    }
                </td>
                <td>
                    @if (accountId == playerDataService.accountId)
                    {
                        <Button @onclick="CreateGame">Create Game</Button>
                    }
                    else
                    {
                        @if (lobbyService.PlayerInGameSession(accountId))
                        {
                            <Button @onclick="() => JoinGame(accountId)">Join Game</Button>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@code
{
    [Parameter]
    public List<string> PlayerList { get; set; }
    [Parameter]
    public string PlayerName { get; set; }
    private async Task Logout()
    {
        await BrowserStorage.DeleteAsync("accountId");
        playerDataService.accountId = "";
        playerDataService.playerUiState = PlayerUiState.None;
        NavigationManager.NavigateTo("/login");
    }

    private async Task CreateGame()
    {
        lobbyService.CreateGameSession(playerDataService.accountId);
        playerDataService.playerUiState = PlayerUiState.InGame;
        await Notifier.Update("SessionChanged", 0);
    }

    private async Task JoinGame(string hostId)
    {
        lobbyService.JoinGameSession(playerDataService.accountId, hostId);
        playerDataService.playerUiState = PlayerUiState.InGame;
        await Notifier.Update("SessionChanged", 0);
    }
}